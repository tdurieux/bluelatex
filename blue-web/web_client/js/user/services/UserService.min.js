angular.module("bluelatex.User.Services.User",["ngResource",'jmdobry.angular-cache','bluelatex.Shared.Services.Configuration']).factory("UserService",['$resource','$http','$log','$angularCacheFactory','$q','apiRootUrl',function(e,f,g,h,i,j){var k=h('userCache',{maxAge:300000,storageMode:'localStorage',deleteOnExpire:'aggressive',verifyIntegrity:true});var l=e(j+"/session",null,{"login":{method:"POST",headers:{'Content-Type':'application/x-www-form-urlencoded'},transformResponse:[function(a,b){if(a=='true')return{response:JSON.parse(a)};return a}].concat(f.defaults.transformResponse)},"get":{method:"GET"},"logout":{'method':'DELETE'}});var m=e(j+"/users/:username/reset",{username:"@username"},{"getToken":{method:"get"},"reset":{'method':'POST',headers:{'Content-Type':'application/x-www-form-urlencoded'}}});var n=e(j+"/users/:username/info",{username:"@username"},{"get":{method:"get",format:'json',transformResponse:[function(a,b){a=JSON.parse(a);a.header=b();return a}].concat(f.defaults.transformResponse)},"modify":{'method':'PATCH',transformRequest:[function(a,b){g.log(a,b);return a}].concat(f.defaults.transformRequest)}});var o=e(j+"/users",null,{"register":{method:"POST",headers:{'Content-Type':'application/x-www-form-urlencoded'}}});var p=e(j+"/users/:username",{username:"@username"},{"remove":{'method':'DELETE'}});return{login:function(a,b){return l.login({},jsonToPostParameters({"username":a,'password':b})).$promise},logout:function(){return l.logout().$promise},getSession:function(){return l.get().$promise},getPasswordToken:function(a){return m.getToken({username:a}).$promise},resetPassword:function(a,b,c,d){return m.reset({username:a},jsonToPostParameters({reset_token:b,new_password1:c,new_password2:d})).$promise},getInfo:function(b){var c=i.defer();var d=c.promise;if(k.get('/users/'+b.username))c.resolve(k.get('/users/'+b.username));else{n.get({username:b.username}).$promise.then(function(a){k.put('/users/'+b.username,a);c.resolve(a)},function(a){g.error(a);c.reject(a)},function(a){c.notify(a)})}return d},save:function(b){var c=i.defer();var d=c.promise;n.modify({username:b.name},b).$promise.then(function(a){k.remove('/users/'+b.name);c.resolve(a)},function(a){g.error(a);c.reject(a)},function(a){c.notify(a)});return d},register:function(a){return o.register({},jsonToPostParameters(a)).$promise},remove:function(b){var c=i.defer();var d=c.promise;p.remove({username:b.username},b).$promise.then(function(a){k.remove('/users/'+b.username);c.resolve(a)},function(a){g.error(a);c.reject(a)},function(a){c.notify(a)});return d}}}]);